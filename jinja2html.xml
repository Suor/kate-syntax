<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd"
[
	<!ENTITY name    "[A-Za-z_:][\w.:_-]*">
	<!ENTITY entref  "&amp;(#[0-9]+|#[xX][0-9A-Fa-f]+|&name;);">
]>
<language name="Jinja2 HTML Template" version="0.1" kateversion="3.2" section="Markup" extensions="*.j2htm;*.j2html;*.j2" mimetype="text/html"  author="Alexander Schepanovski (https://github.com/Suor/kate-syntax)" license="LGPL" priority="9">

<!--
    Based on Django HTML Template syntax file by Matthew Marshall (matthew@matthewmarshall.org).

    Email me with any bugs/suggestions/requests!
-->

<highlighting>

<list name="blocktags">
    <item> for </item>
    <item> block </item>
    <item> if </item>
    <item> macro </item>
    <item> call </item>
    <item> filter </item>
    <item> with </item>
    <item> trans </item>
    <item> spaceless </item>
</list>
<list name="endblocktags">
    <item> endfor </item>
    <item> endblock </item>
    <item> endif </item>
    <item> endmacro </item>
    <item> endcall </item>
    <item> endfilter </item>
    <item> endwith </item>
    <item> endtrans </item>
    <item> endspaceless </item>
</list>
<list name="tagkeywords">
    <item> in </item>
    <item> if </item>
    <item> is </item>
    <item> as </item>
    <item> by </item>
    <item> import </item>
    <item> with </item>
    <item> without </item>
    <item> context </item>
</list>
<list name="operators">
    <item> and </item>
    <item> in </item>
    <item> is </item>
    <item> not </item>
    <item> or </item>
</list>
<list name="commands">
    <item> exec </item>
    <item> print </item>
</list>
<list name="specialvars">
    <item> None </item>
    <item> True </item>
    <item> False </item>
</list>

<contexts>
  <context name="Start" attribute="Normal Text" lineEndContext="#stay">
    <RegExpr attribute="Mismatched Block Tag" context="#stay" String="\{%\s*end[a-z]+\s*%\}" />
    <IncludeRules context="FindTemplate" />
    <IncludeRules context="FindHTML" />
  </context>

  <context name="In Block" attribute="Normal Text" lineEndContext="#stay">
    <RegExpr context="#pop" String="\{%\s*end[a-z]+\s*%\}" lookAhead="true" />
    <IncludeRules context="FindTemplate" />
    <IncludeRules context="FindHTML" />
  </context>

  <context name="FindTemplate" attribute="Normal Text" lineEndContext="#stay">
    <Detect2Chars attribute="Template Comment" context="Template Comment" char="{" char1="#" beginRegion="templatecomment"/>
    <Detect2Chars attribute="Template Var Marker" context="Template Var" char="{" char1="{" />
    <Detect2Chars attribute="Template Tag Marker" context="Template Tag" char="{" char1="%" />
  </context>

  <context name="Template Comment" attribute="Template Comment" lineEndContext="#stay">
    <Detect2Chars attribute="Template Comment" context="#pop" char="#" char1="}" endRegion="templatecomment"/>
    <DetectSpaces/>
    <IncludeRules context="##Alerts" />
  </context>

  <context name="Template Var" attribute="Template Var" lineEndContext="#stay">
    <Detect2Chars attribute="Template Var Marker" context="#pop" char="}" char1="}" />
    <Detect2Chars attribute="Error" context="#stay" char="{" char1="{" />
    <Detect2Chars attribute="Error" context="#stay" char="{" char1="%" />
    <Detect2Chars attribute="Error" context="#stay" char="%" char1="}" />
    <IncludeRules context="PythonNormal" />
  </context>

<!--  <context name="Template Filter" attribute="Template Filter" lineEndContext="#stay">
    <Detect2Chars attribute="Template Var Marker" context="#pop#pop" char="}" char1="}" />
    <DetectChar attribute="Normal" char="(" context="parenthesised" beginRegion="parenthesis"/>
    <DetectSpaces context="#pop" />
    <AnyChar attribute="Operator" String="+*/%\=;\!&lt;&gt;!^&amp;~-" context="#pop"/>-->

<!--    <DetectChar attribute="String" char="'" context="Single A-string"/>
    <DetectChar attribute="String" char="&quot;" context="Single Q-string"/>-->
<!--    <Detect2Chars attribute="Error" context="#stay" char="{" char1="{" />
    <Detect2Chars attribute="Error" context="#stay" char="{" char1="%" />
    <Detect2Chars attribute="Error" context="#stay" char="%" char1="}" />
  </context>-->

  <context name="Template Tag" attribute="Template Tag" lineEndContext="#stay" dynamic="true">
      <DetectChar attribute="Normal" char="-" context="#stay"/>
      <keyword String="blocktags" context="Found Block Tag" lookAhead="true" attribute="Template Tag" />
      <DetectIdentifier attribute="Template Tag" context="In Template Tag" />
  </context>

  <context name="Found Block Tag" attribute="Template Tag" lineEndContext="#stay" dynamic="true">
    <!-- This context is entered when a matching block tag was found through lookAhead.  We need to capture it in an re, so that it can be matched with the end[blockname] tag later -->
    <RegExpr attribute="Template Tag" String="(&name;)" dynamic="true" context="In Block Tag"/>
  </context>

  <context name="In Block Tag" attribute="Template Tag Argument" dynamic="true" lineEndContext="#stay" >
<!--    <RegExpr context="Block End Tag" String="\{%\s*end%1\s*%\}" attribute="CDATA" dynamic="true" lookAhead="true" />-->
<!-- old:   <RegExpr context="#pop#pop#pop" String="\{%\s*end%1\s*%\}" dynamic="true" attribute="Template Tag" lookAhead="true" />-->
<!-- doesn't work, bug? <RegExpr attribute="Template Filter" context="Block End Tag" String="\{%\s*end(%1)\s*%\}" dynamic="true" lookAhead="true" />-->
    <RegExpr context="Block End Tag" String="\{%\s*end[a-z]+\s*%\}" attribute="CDATA" lookAhead="true" />
    <RegExpr context="Non Matching Tag" String="\{%\s*end[a-z]+\s*%\}" />
    <Detect2Chars attribute="Template Tag Marker" context="In Block" char="%" char1="}" />
    <IncludeRules context="In Template Tag" />
  </context>

  <context name="Block End Tag" attribute="Template Tag" lineEndContext="#stay">
    <Detect2Chars attribute="Template Tag Marker" char="{" char1="%" />
    <keyword String="endblocktags" attribute="Template Tag" />
<!--    <RegExpr attribute="Template Tag" String="end[a-z]+" />-->
    <Detect2Chars attribute="Template Tag Marker" context="#pop#pop#pop#pop" char="%" char1="}" />
  </context>

  <context name="Non Matching Tag" attribute="Template Tag" lineEndContext="#stay">
    <keyword String="endblocktags" attribute="Mismatched Block Tag" context="#pop" />
    <!-- If the mismatched tag is one we don't know about, ignore it. -->
    <DetectIdentifier attribute="CDATA" context="#pop" />
    <DetectIdentifier attribute="Template Tag" context="#pop" />
  </context>

  <context name="In Template Tag" attribute="Template Tag Argument" lineEndContext="#stay">
    <Detect2Chars attribute="Template Tag Marker" context="#pop#pop" char="%" char1="}" />
    <keyword String="tagkeywords" context="#stay" attribute="Template Tag" />
<!--    <DetectChar attribute="String" char="'" context="Single A-string"/>
    <DetectChar attribute="String" char="&quot;" context="Single Q-string"/>-->
    <IncludeRules context="PythonNormal" />

    <Detect2Chars attribute="Error" context="#stay" char="{" char1="{" />
    <Detect2Chars attribute="Error" context="#stay" char="{" char1="%" />
    <Detect2Chars attribute="Error" context="#stay" char="}" char1="}" />
  </context>

    <context name="PythonNormal" attribute="Normal Text" lineEndContext="#stay">
        <keyword attribute="Operator" String="operators" context="#stay"/>
        <keyword attribute="Special Variable" String="specialvars" context="#stay"/>

        <RegExpr attribute="Template Var" String="[a-zA-Z_][a-zA-Z_0-9]*" context="#stay"/>

        <Float attribute="Float" context="#stay" />
        <HlCHex attribute="Hex" context="#stay"/>
        <HlCOct attribute="Octal" context="#stay"/>
        <Int attribute="Int" context="#stay"/>

        <!-- ' -->
        <DetectChar attribute="String" char="'" context="Single A-string"/>
        <Detect2Chars attribute="String" char="u" char1="'" context="Single A-string"/>
        <!-- " -->
        <DetectChar attribute="String" char="&quot;" context="Single Q-string"/>
        <Detect2Chars attribute="String" char="u" char1="&quot;" context="Single Q-string"/>

        <RegExpr attribute="Template Filter" context="Filter parentheses" String='\|\s*[a-zA-Z_]\w*\(' />
        <RegExpr attribute="Template Filter" context="#stay" String='\|\s*[a-zA-Z_]\w*' />

        <DetectChar attribute="Normal" char="(" context="parenthesised" beginRegion="parenthesis"/>
        <DetectChar attribute="Normal" char=")" context="#pop" endRegion="parenthesis"/>

        <AnyChar attribute="Operator" String="+*/%\|=;\!&lt;&gt;!^&amp;~-" context="#stay"/>
    </context>

    <context name="parenthesised" attribute="Normal Text" lineEndContext="#stay" noIndentationBasedFolding="true">
        <IncludeRules context="PythonNormal" />
    </context>

  <context name="Filter parentheses" attribute="Template Filter" lineEndContext="#stay">
        <DetectChar attribute="Template Filter" char=")" context="#pop" endRegion="parenthesis"/>
        <IncludeRules context="PythonNormal" />
<!--    <Detect2Chars attribute="Template Var Marker" context="#pop#pop" char="}" char1="}" />-->
<!--    <DetectChar attribute="Normal" char="(" context="parenthesised" beginRegion="parenthesis"/>
    <DetectSpaces context="#pop" />
    <AnyChar attribute="Operator" String="+*/%\=;\!&lt;&gt;!^&amp;~-" context="#pop"/>-->

<!--    <DetectChar attribute="String" char="'" context="Single A-string"/>
    <DetectChar attribute="String" char="&quot;" context="Single Q-string"/>-->
<!--    <Detect2Chars attribute="Error" context="#stay" char="{" char1="{" />
    <Detect2Chars attribute="Error" context="#stay" char="{" char1="%" />
    <Detect2Chars attribute="Error" context="#stay" char="%" char1="}" />-->
  </context>


  <context name="Single A-string" attribute="String" lineEndContext="#stay">
    <HlCStringChar attribute="String" context="#stay"/>
<!--       <RegExpr attribute="Operator" String="%[a-zA-Z]" context="#stay"/> -->
    <DetectChar attribute="String" char="'" context="#pop"/>
  </context>

  <context name="Single Q-string" attribute="String" lineEndContext="#stay">
    <HlCStringChar attribute="String" context="#stay"/>
<!--       <RegExpr attribute="Operator" String="%[a-zA-Z]" context="#stay"/> -->
    <DetectChar attribute="String" char="&quot;" context="#pop"/>
  </context>



  <context name="FindHTML" attribute="Normal Text" lineEndContext="#stay">
    <DetectSpaces/>
    <DetectIdentifier/>
    <StringDetect attribute="Comment" context="Comment" String="&lt;!--" beginRegion="comment" />
    <StringDetect attribute="CDATA" context="CDATA" String="&lt;![CDATA[" beginRegion="cdata" />
    <RegExpr attribute="Doctype" context="Doctype" String="&lt;!DOCTYPE\s+" beginRegion="doctype" />
    <RegExpr attribute="Processing Instruction" context="PI" String="&lt;\?[\w:-]*" beginRegion="pi" />
    <RegExpr attribute="Element" context="CSS" String="&lt;style\b" insensitive="TRUE" beginRegion="style" />
    <RegExpr attribute="Element" context="JS" String="&lt;script\b" insensitive="TRUE" beginRegion="script" />
    <RegExpr attribute="Element" context="El Open" String="&lt;pre\b" insensitive="TRUE" beginRegion="pre" />
    <RegExpr attribute="Element" context="El Open" String="&lt;div\b" insensitive="TRUE" beginRegion="div" />
    <RegExpr attribute="Element" context="El Open" String="&lt;table\b" insensitive="TRUE" beginRegion="table" />
    <RegExpr attribute="Element" context="El Open" String="&lt;&name;" />
    <RegExpr attribute="Element" context="El Close" String="&lt;/pre\b" insensitive="TRUE" endRegion="pre" />
    <RegExpr attribute="Element" context="El Close" String="&lt;/div\b" insensitive="TRUE" endRegion="div" />
    <RegExpr attribute="Element" context="El Close" String="&lt;/table\b" insensitive="TRUE" endRegion="table" />
    <RegExpr attribute="Element" context="El Close" String="&lt;/&name;" />
    <!-- as long as kde gives DTDs the text/html mimetype--><IncludeRules context="FindDTDRules" />
    <IncludeRules context="FindEntityRefs" />
  </context>

  <context name="FindEntityRefs" attribute="Normal Text" lineEndContext="#stay">
    <RegExpr attribute="EntityRef" context="#stay" String="&entref;" />
    <AnyChar attribute="Error" context="#stay" String="&amp;&lt;" />
  </context>

  <context name="FindPEntityRefs" attribute="Normal Text" lineEndContext="#stay">
    <RegExpr attribute="EntityRef" context="#stay" String="&entref;" />
    <RegExpr attribute="PEntityRef" context="#stay" String="%&name;;" />
    <AnyChar attribute="Error" context="#stay" String="&amp;%" />
  </context>

  <context name="FindAttributes" attribute="Normal Text" lineEndContext="#stay">
    <RegExpr attribute="Attribute" context="#stay" String="&name;" column="0"/>
    <RegExpr attribute="Attribute" context="#stay" String="\s+&name;" />
    <DetectChar attribute="Attribute" context="Value" char="=" />
  </context>

  <context name="FindDTDRules" attribute="Normal Text" lineEndContext="#stay">
    <RegExpr attribute="Doctype" context="Doctype Markupdecl" String="&lt;!(ELEMENT|ENTITY|ATTLIST|NOTATION)\b" />
  </context>


  <context name="Comment" attribute="Comment" lineEndContext="#stay">
    <DetectSpaces/>
    <IncludeRules context="##Alerts" />
    <IncludeRules context="FindTemplate" />
    <DetectIdentifier/>
    <StringDetect attribute="Comment" context="#pop" String="--&gt;" endRegion="comment" />
    <RegExpr attribute="Error" context="#stay" String="-(-(?!-&gt;))+" />
  </context>

  <context name="CDATA" attribute="Normal Text" lineEndContext="#stay">
    <DetectSpaces/>
    <DetectIdentifier/>
    <StringDetect attribute="CDATA" context="#pop" String="]]&gt;" endRegion="cdata" />
    <StringDetect attribute="EntityRef" context="#stay" String="]]&amp;gt;" />
  </context>

  <context name="PI" attribute="Normal Text" lineEndContext="#stay">
    <Detect2Chars attribute="Processing Instruction" context="#pop" char="?" char1="&gt;" endRegion="pi" />
  </context>

  <context name="Doctype" attribute="Normal Text" lineEndContext="#stay">
    <DetectChar attribute="Doctype" context="#pop" char="&gt;" endRegion="doctype" />
    <DetectChar attribute="Doctype" context="Doctype Internal Subset" char="[" beginRegion="int_subset" />
  </context>

  <context name="Doctype Internal Subset" attribute="Normal Text" lineEndContext="#stay">
    <DetectChar attribute="Doctype" context="#pop" char="]" endRegion="int_subset" />
    <IncludeRules context="FindDTDRules" />
    <StringDetect attribute="Comment" context="Comment" String="&lt;!--" beginRegion="comment" />
    <RegExpr attribute="Processing Instruction" context="PI" String="&lt;\?[\w:-]*" beginRegion="pi" />
    <IncludeRules context="FindPEntityRefs" />
  </context>

  <context name="Doctype Markupdecl" attribute="Normal Text" lineEndContext="#stay">
    <DetectChar attribute="Doctype" context="#pop" char="&gt;" />
    <DetectChar attribute="Value" context="Doctype Markupdecl DQ" char="&quot;" />
    <DetectChar attribute="Value" context="Doctype Markupdecl SQ" char="&apos;" />
  </context>

  <context name="Doctype Markupdecl DQ" attribute="Value" lineEndContext="#stay">
    <DetectChar attribute="Value" context="#pop" char="&quot;" />
    <IncludeRules context="FindPEntityRefs" />
  </context>

  <context name="Doctype Markupdecl SQ" attribute="Value" lineEndContext="#stay">
    <DetectChar attribute="Value" context="#pop" char="&apos;" />
    <IncludeRules context="FindPEntityRefs" />
  </context>

  <context name="El Open" attribute="Normal Text" lineEndContext="#stay">
    <Detect2Chars attribute="Element" context="#pop" char="/" char1="&gt;" />
    <DetectChar attribute="Element" context="#pop" char="&gt;" />
    <IncludeRules context="FindAttributes" />
    <IncludeRules context="FindTemplate" />
    <RegExpr attribute="Error" context="#stay" String="\S" />
  </context>

  <context name="El Close" attribute="Normal Text" lineEndContext="#stay">
    <DetectChar attribute="Element" context="#pop" char="&gt;" />
    <RegExpr attribute="Error" context="#stay" String="\S" />
  </context>

  <context name="El Close 2" attribute="Normal Text" lineEndContext="#stay">
    <DetectChar attribute="Element" context="#pop#pop#pop" char="&gt;" />
    <RegExpr attribute="Error" context="#stay" String="\S" />
  </context>

  <context name="El Close 3" attribute="Normal Text" lineEndContext="#stay">
    <DetectChar attribute="Element" context="#pop#pop#pop#pop" char="&gt;" />
    <RegExpr attribute="Error" context="#stay" String="\S" />
  </context>

  <context name="CSS" attribute="Normal Text" lineEndContext="#stay">
    <Detect2Chars attribute="Element" context="#pop" char="/" char1="&gt;" endRegion="style" />
    <DetectChar attribute="Element" context="CSS content" char="&gt;" />
    <IncludeRules context="FindAttributes" />
    <IncludeRules context="FindTemplate" />
    <RegExpr attribute="Error" context="#stay" String="\S" />
  </context>

  <context name="CSS content" attribute="Normal Text" lineEndContext="#stay">
    <RegExpr attribute="Element" context="El Close 2" String="&lt;/style\b" insensitive="TRUE" endRegion="style" />
    <IncludeRules context="FindTemplate" />
    <IncludeRules context="##CSS" includeAttrib="true"/>
  </context>

  <context name="JS" attribute="Normal Text" lineEndContext="#stay">
    <Detect2Chars attribute="Element" context="#pop" char="/" char1="&gt;" endRegion="script" />
    <DetectChar attribute="Element" context="JS content" char="&gt;" />
    <IncludeRules context="FindTemplate" />
    <IncludeRules context="FindAttributes" />
    <RegExpr attribute="Error" context="#stay" String="\S" />
  </context>

  <context name="JS content" attribute="Normal Text" lineEndContext="#stay">
    <RegExpr attribute="Element" context="El Close 2" String="&lt;/script\b" insensitive="TRUE" endRegion="script" />
    <RegExpr attribute="Comment" context="JS comment close" String="//(?=.*&lt;/script\b)" insensitive="TRUE" />
    <IncludeRules context="FindTemplate" />
    <IncludeRules context="##JavaScript" includeAttrib="true"/>
  </context>

  <context name="JS comment close" attribute="Comment" lineEndContext="#pop">
    <RegExpr attribute="Element" context="El Close 3" String="&lt;/script\b" insensitive="TRUE" endRegion="script" />
    <IncludeRules context="FindTemplate" />
    <IncludeRules context="##Alerts" />
  </context>

  <context name="Value" attribute="Normal Text" lineEndContext="#stay" fallthrough="true" fallthroughContext="Value NQ">
    <DetectChar attribute="Value" context="Value DQ" char="&quot;" />
    <DetectChar attribute="Value" context="Value SQ" char="&apos;" />
    <DetectSpaces />
  </context>

  <context name="Value NQ" attribute="Normal Text" lineEndContext="#pop#pop" fallthrough="true" fallthroughContext="#pop#pop">
    <IncludeRules context="FindEntityRefs" />
    <IncludeRules context="FindTemplate" />
    <RegExpr attribute="Value" context="#stay" String="/(?!&gt;)" />
    <RegExpr attribute="Value" context="#stay" String="[^/&gt;&lt;&quot;&apos;\s]" />
  </context>

  <context name="Value DQ" attribute="Value" lineEndContext="#stay">
    <DetectChar attribute="Value" context="#pop#pop" char="&quot;" />
    <IncludeRules context="FindTemplate" />
    <IncludeRules context="FindEntityRefs" />
  </context>

  <context name="Value SQ" attribute="Value" lineEndContext="#stay">
    <DetectChar attribute="Value" context="#pop#pop" char="&apos;" />
    <IncludeRules context="FindTemplate" />
    <IncludeRules context="FindEntityRefs" />
  </context>

</contexts>
<itemDatas>
  <itemData name="Normal Text" defStyleNum="dsNormal" />
  <itemData name="Comment" defStyleNum="dsComment" />
  <itemData name="CDATA" defStyleNum="dsBaseN" bold="1" />
  <itemData name="Processing Instruction" defStyleNum="dsKeyword" />
  <itemData name="Doctype" defStyleNum="dsDataType" bold="1" />

<!--
  Django documentation style
  <itemData name="Element" defStyleNum="dsFunction" />
  <itemData name="Attribute" defStyleNum="dsOthers" />
  <itemData name="Value" defStyleNum="dsString" />
  <itemData name="EntityRef" defStyleNum="dsDecVal" />
  <itemData name="PEntityRef" defStyleNum="dsDecVal" />
  <itemData name="Error" defStyleNum="dsError" />
  <itemData name="Template Var" defStyleNum="dsOthers" />
  <itemData name="Template Var Marker" defStyleNum="dsComment" bold="1" italic="0" />
  <itemData name="Template Tag" defStyleNum="dsKeyword" bold="1" />
  <itemData name="Template Tag Marker" defStyleNum="dsComment" bold="1" italic="0" />
  <itemData name="Template Tag Argument" defStyleNum="dsOthers" />
  <itemData name="Template String" defStyleNum="dsString" />
  <itemData name="Template Comment" defStyleNum="dsComment" />
  <itemData name="Template Filter" defStyleNum="dsDataType" />
  <itemData name="Mismatched Block Tag" defStyleNum="dsError" />
-->

    <itemData name="Element" defStyleNum="dsKeyword" />
    <itemData name="Attribute" defStyleNum="dsOthers" />
    <itemData name="Value" defStyleNum="dsString" />
    <itemData name="EntityRef" defStyleNum="dsDecVal" />
    <itemData name="PEntityRef" defStyleNum="dsDecVal" />
    <itemData name="Error" defStyleNum="dsError" />
    <itemData name="Template Var" defStyleNum="dsFunction" />
    <itemData name="Template Var Marker" defStyleNum="dsComment" bold="1" italic="0" />
    <itemData name="Template Tag" defStyleNum="dsFunction" bold="1" />
    <itemData name="Template Tag Marker" defStyleNum="dsComment" bold="1" italic="0" />
    <itemData name="Template Tag Argument" defStyleNum="dsFunction" />
    <itemData name="String" defStyleNum="dsString" />
    <itemData name="Template Comment" defStyleNum="dsComment" />
    <itemData name="Template Filter" defStyleNum="dsDataType" />
    <itemData name="Mismatched Block Tag" defStyleNum="dsError" />

    <itemData name="Operator" defStyleNum="dsNormal" bold="1" spellChecking="false"/>
    <itemData name="String Substitution" defStyleNum="dsOthers" color="#0057ae" selColor="#ffffff"  spellChecking="false"/>
    <itemData name="Special Variable" defStyleNum="dsOthers" spellChecking="false"/>
    <itemData name="String Char" defStyleNum="dsChar" spellChecking="false"/>
    <itemData name="Float" defStyleNum="dsFloat" spellChecking="false"/>
    <itemData name="Int" defStyleNum="dsDecVal" spellChecking="false"/>
    <itemData name="Hex" defStyleNum="dsBaseN" spellChecking="false"/>
    <itemData name="Octal" defStyleNum="dsBaseN" spellChecking="false"/>

</itemDatas>

</highlighting>
<general>
  <comments>
      <comment name="multiLine" start="{#" end="#}" region="templatecomment" />
  </comments>
</general>
</language>
